{"version":3,"file":"special-numbers.umd.cjs","sources":["../../presets/special-numbers.js","../../types/nan.js","../../types/infinity.js","../../types/negative-infinity.js","../../types/negative-zero.js"],"sourcesContent":["import nan from '../types/nan.js';\nimport infinity from '../types/infinity.js';\nimport negativeInfinity from '../types/negative-infinity.js';\nimport negativeZero from '../types/negative-zero.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst specialNumbers = [\n    nan,\n    infinity,\n    negativeInfinity,\n    negativeZero\n];\n\nexport default specialNumbers;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst nan = {\n    nan: {\n        test (x) { return Number.isNaN(x); },\n        replace (/* n */) { return 'NaN'; },\n        revive (/* s */) { return Number.NaN; }\n    }\n};\n\nexport default nan;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst infinity = {\n    infinity: {\n        test (x) { return x === Number.POSITIVE_INFINITY; },\n        replace (/* n */) { return 'Infinity'; },\n        revive (/* s */) { return Number.POSITIVE_INFINITY; }\n    }\n};\n\nexport default infinity;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst negativeInfinity = {\n    negativeInfinity: {\n        test (x) { return x === Number.NEGATIVE_INFINITY; },\n        replace (/* n */) { return '-Infinity'; },\n        revive (/* s */) { return Number.NEGATIVE_INFINITY; }\n    }\n};\n\nexport default negativeInfinity;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst negativeZero = {\n    negativeZero: {\n        test (x) {\n            return Object.is(x, -0);\n        },\n        replace (/* n */) {\n            // Just adding 0 here for minimized space; will still revive as -0\n            return 0;\n        },\n        revive (/* s */) {\n            return -0;\n        }\n    }\n};\n\nexport default negativeZero;\n"],"names":["nan","test","x","Number","isNaN","replace","revive","NaN","infinity","POSITIVE_INFINITY","negativeInfinity","NEGATIVE_INFINITY","negativeZero","Object","is"],"mappings":"qPAQuB,CCLX,CACRA,IAAK,CACDC,KAAI,SAAAA,KAAEC,GAAK,OAAOC,OAAOC,MAAMF,EAAK,EACpCG,QAAO,SAAAA,UAAa,MAAO,KAAQ,EACnCC,OAAM,SAAAA,SAAa,OAAOH,OAAOI,GAAM,ICJ9B,CACbC,SAAU,CACNP,KAAI,SAAAA,KAAEC,GAAK,OAAOA,IAAMC,OAAOM,iBAAoB,EACnDJ,QAAO,SAAAA,UAAa,MAAO,UAAa,EACxCC,OAAM,SAAAA,SAAa,OAAOH,OAAOM,iBAAoB,ICJpC,CACrBC,iBAAkB,CACdT,KAAI,SAAAA,KAAEC,GAAK,OAAOA,IAAMC,OAAOQ,iBAAoB,EACnDN,QAAO,SAAAA,UAAa,MAAO,WAAc,EACzCC,OAAM,SAAAA,SAAa,OAAOH,OAAOQ,iBAAoB,ICJxC,CACjBC,aAAc,CACVX,KAAI,SAAAA,KAAEC,GACF,OAAOW,OAAOC,GAAGZ,GAAI,EACxB,EACDG,QAAO,SAAAA,UAEH,OAAO,CACV,EACDC,OAAM,SAAAA,SACF,OAAQ,CACX"}