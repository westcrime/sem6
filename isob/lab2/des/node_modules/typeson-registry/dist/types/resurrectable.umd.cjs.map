{"version":3,"file":"resurrectable.umd.cjs","sources":["../../types/resurrectable.js","../../utils/generateUUID.js"],"sourcesContent":["// Here we allow the exact same non-plain object, function, and symbol\n//  instances to be resurrected (assuming the same session/environment);\n//  plain objects are ignored by Typeson so not presently available and\n//  we consciously exclude arrays\n\nimport generateUUID from '../utils/generateUUID.js';\n\n/**\n * @type {{[key: string]: any}}\n */\nconst resurrectableObjectsByUUID = {};\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst resurrectable = {\n    resurrectable: {\n        test (x) {\n            return x &&\n                !Array.isArray(x) &&\n                ['object', 'function', 'symbol'].includes(typeof x);\n        },\n        replace (rsrrctble) {\n            const uuid = generateUUID();\n            resurrectableObjectsByUUID[uuid] = rsrrctble;\n            return uuid;\n        },\n        revive (serializedResurrectable) {\n            return resurrectableObjectsByUUID[serializedResurrectable];\n        }\n    }\n};\n\nexport default resurrectable;\n","// The `performance` global is optional\n\n/**\n * @todo We could use `import generateUUID from 'uuid/v4';` (but it needs\n *   crypto library, etc.; `rollup-plugin-node-builtins` doesn't recommend\n *   using its own version and though there is <https://www.npmjs.com/package/crypto-browserify>,\n *   it may be troublesome to bundle and not strongly needed)\n * @returns {string}\n */\nexport default function generateUUID () { //  Adapted from original: public domain/MIT: http://stackoverflow.com/a/8809472/271577\n    /* c8 ignore next */\n    let d = Date.now() +\n        // use high-precision timer if available\n        /* c8 ignore next 4 */\n        (typeof performance !== 'undefined' &&\n            typeof performance.now === 'function'\n            ? performance.now()\n            : 0);\n\n    // eslint-disable-next-line @stylistic/max-len -- Long\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native -- Need to update plugin\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replaceAll(/[xy]/gu, function (c) {\n        /* eslint-disable no-bitwise */\n        const r = Math.trunc((d + (Math.random() * 16)) % 16);\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16);\n        /* eslint-enable no-bitwise */\n    });\n}\n"],"names":["resurrectableObjectsByUUID","resurrectable","test","x","Array","isArray","includes","_typeof","replace","rsrrctble","uuid","generateUUID","d","Date","now","performance","replaceAll","c","r","Math","trunc","random","floor","toString","revive","serializedResurrectable"],"mappings":"seAUA,IAAMA,EAA6B,CAAA,QAKb,CAClBC,cAAe,CACXC,KAAI,SAAAA,KAAEC,GACF,OAAOA,IACFC,MAAMC,QAAQF,IACf,CAAC,SAAU,WAAY,UAAUG,SAAQC,QAAQJ,GACxD,EACDK,QAAO,SAAAA,QAAEC,GACL,IAAMC,ECdH,SAASC,eAEpB,IAAIC,EAAIC,KAAKC,OAGe,oBAAhBC,aACuB,mBAApBA,YAAYD,IACjBC,YAAYD,MACZ,GAIV,MAAO,uCAAuCE,WAAW,SAAU,SAAUC,GAEzE,IAAMC,EAAIC,KAAKC,OAAOR,EAAqB,GAAhBO,KAAKE,UAAkB,IAElD,OADAT,EAAIO,KAAKG,MAAMV,EAAI,KACL,MAANK,EAAYC,EAAU,EAAJA,EAAW,GAAMK,SAAS,GAExD,GACJ,CDLyBZ,GAEb,OADAX,EAA2BU,GAAQD,EAC5BC,CACV,EACDc,OAAM,SAAAA,OAAEC,GACJ,OAAOzB,EAA2ByB,EACtC"}