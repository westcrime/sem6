{"version":3,"file":"cloneable.umd.cjs","sources":["../../types/cloneable.js","../../utils/generateUUID.js"],"sourcesContent":["import generateUUID from '../utils/generateUUID.js';\n\n/**\n * @type {{[key: (symbol|string)]: any}}\n */\nconst cloneableObjectsByUUID = {};\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst cloneable = {\n    cloneable: {\n        test (x) {\n            return x && typeof x === 'object' &&\n                typeof x[Symbol.for('cloneEncapsulate')] === 'function';\n        },\n        replace (clonable) {\n            const encapsulated = clonable[Symbol.for('cloneEncapsulate')]();\n            const uuid = generateUUID();\n            cloneableObjectsByUUID[uuid] = clonable;\n            return {uuid, encapsulated};\n        },\n        revive (obj) {\n            const {\n                uuid, encapsulated\n            } = /** @type {{uuid: string, encapsulated: any}} */ (obj);\n\n            return cloneableObjectsByUUID[uuid][Symbol.for('cloneRevive')](\n                encapsulated\n            );\n        }\n    }\n};\n\nexport default cloneable;\n","// The `performance` global is optional\n\n/**\n * @todo We could use `import generateUUID from 'uuid/v4';` (but it needs\n *   crypto library, etc.; `rollup-plugin-node-builtins` doesn't recommend\n *   using its own version and though there is <https://www.npmjs.com/package/crypto-browserify>,\n *   it may be troublesome to bundle and not strongly needed)\n * @returns {string}\n */\nexport default function generateUUID () { //  Adapted from original: public domain/MIT: http://stackoverflow.com/a/8809472/271577\n    /* c8 ignore next */\n    let d = Date.now() +\n        // use high-precision timer if available\n        /* c8 ignore next 4 */\n        (typeof performance !== 'undefined' &&\n            typeof performance.now === 'function'\n            ? performance.now()\n            : 0);\n\n    // eslint-disable-next-line @stylistic/max-len -- Long\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native -- Need to update plugin\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replaceAll(/[xy]/gu, function (c) {\n        /* eslint-disable no-bitwise */\n        const r = Math.trunc((d + (Math.random() * 16)) % 16);\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16);\n        /* eslint-enable no-bitwise */\n    });\n}\n"],"names":["cloneableObjectsByUUID","cloneable","test","x","_typeof","Symbol","replace","clonable","encapsulated","uuid","generateUUID","d","Date","now","performance","replaceAll","c","r","Math","trunc","random","floor","toString","revive","obj"],"mappings":"keAKA,IAAMA,EAAyB,CAAA,QAKb,CACdC,UAAW,CACPC,KAAI,SAAAA,KAAEC,GACF,OAAOA,GAAkB,WAAbC,QAAOD,IAC8B,mBAAtCA,EAAEE,OAAU,IAAC,oBAC3B,EACDC,QAAO,SAAAA,QAAEC,GACL,IAAMC,EAAeD,EAASF,OAAU,IAAC,uBACnCI,ECTH,SAASC,eAEpB,IAAIC,EAAIC,KAAKC,OAGe,oBAAhBC,aACuB,mBAApBA,YAAYD,IACjBC,YAAYD,MACZ,GAIV,MAAO,uCAAuCE,WAAW,SAAU,SAAUC,GAEzE,IAAMC,EAAIC,KAAKC,OAAOR,EAAqB,GAAhBO,KAAKE,UAAkB,IAElD,OADAT,EAAIO,KAAKG,MAAMV,EAAI,KACL,MAANK,EAAYC,EAAU,EAAJA,EAAW,GAAMK,SAAS,GAExD,GACJ,CDVyBZ,GAEb,OADAV,EAAuBS,GAAQF,EACxB,CAACE,KAAAA,EAAMD,aAAAA,EACjB,EACDe,OAAM,SAAAA,OAAEC,GACJ,IACIf,EACkDe,EADlDf,KAAMD,EAC4CgB,EAD5ChB,aAGV,OAAOR,EAAuBS,GAAMJ,OAAU,IAAC,gBAC3CG,EAER"}