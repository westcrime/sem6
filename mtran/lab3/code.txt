(define (sum-list lst)
    (if (null? lst)
      0
      (+ (car lst) (sum-list (cdr lst)))))

(define x (list 1.2 2 3 4))

(if (list? x)
    (display (sum-list x))
    (display "variable x is not list"))

(if #f
    (display "Impossible")
    (display "fdsfsd"))

(define sym 'symbol')
(+ +1 -2)
(if (< 2 3))